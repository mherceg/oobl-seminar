@model Tracktor.Web.ViewModels.Place.AddPlaceVM

@{
    ViewBag.Title = "Add place";
}
@Styles.Render("~/Content/Map.css")


<h2>Add place</h2> <hr />
<div class="thumbnail" style="padding: 0px 20px 20px">
    <div class="row">
        <div class="col-xs-6">
            <h3>Location</h3> <hr />
            <div id="map"></div>
            <div class="thumbnail" style="text-align: center">
                Choose a place on the map to register that location.
            </div>
        </div>
        <div class="col-xs-6">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <h3>Place information</h3> <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Lat, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Lat, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", id = "lat" } })
                            @Html.ValidationMessageFor(model => model.Lat, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Lng, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Lng, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", id = "lng" } })
                            @Html.ValidationMessageFor(model => model.Lng, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Create" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            }

        </div>
    </div>
</div>
<script type="text/javascript">
    var marker = null;

    function initMap() {
        var map = new google.maps.Map(document.getElementById('map'), {
            zoom: 1,
            center: { lat: 45.815399, lng: 15.966568 }
        });

        google.maps.event.addListener(map, 'click', function (event) {
            if (marker != null) {
                marker.setMap(null);
            }
            marker = new google.maps.Marker({ position: event.latLng, map: map });
            document.getElementById("lat").setAttribute("value", event.latLng.lat());
            document.getElementById("lng").setAttribute("value", event.latLng.lng());
        });
    }
</script>
<script async defer
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDS2vUZXxyTNyg4Kx_UlRimVwz0V_VLMaQ&callback=initMap">
</script>
